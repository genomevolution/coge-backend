@startuml
title Comparative Genomics Backend - Components Diagram

package "External Services" {
    [MinIO Object Storage] as MinIO #lightblue
    [PostgreSQL Database] as DB #lightgreen
}

package "FastAPI Application" {
    [FastAPI Main] as FastAPI #orange
    
    package "Controllers Layer" {
        [Genome Controller] as GenomeCtrl
        [Biosample Controller] as BiosampleCtrl
    }
    
    package "Services Layer" {
        [Genome Service] as GenomeSvc
        [Biosample Service] as BiosampleSvc
        [Genome Uploader Service] as GenomeUploadSvc
        [Annotation Uploader Service] as AnnotationUploadSvc
        [MinIO Service] as MinIOSvc #lightblue
        [Search Service] as SearchSvc
    }
    
    package "Repository Layer" {
        [Genome Repository] as GenomeRepo
        [Biosample Repository] as BiosampleRepo
        [File Repository] as FileRepo
        [Database Connection] as DBConn
    }
    
    package "Models" {
        [Genome Model] as GenomeModel
        [Biosample Model] as BiosampleModel
        [File Model] as FileModel
        [Annotation Model] as AnnotationModel
        [Exception Models] as ExceptionModels
    }
}

' External connections
MinIO ||--|| MinIOSvc : "Object Storage\n(Upload/Download/Delete)"
DB ||--|| DBConn : "Database Connection"

' Internal connections
FastAPI --> GenomeCtrl : "HTTP Endpoints"
FastAPI --> BiosampleCtrl : "HTTP Endpoints"

GenomeCtrl --> GenomeSvc : "Business Logic"
BiosampleCtrl --> BiosampleSvc : "Business Logic"

GenomeSvc --> GenomeRepo : "Data Access"
GenomeSvc --> GenomeUploadSvc : "File Upload"
GenomeSvc --> AnnotationUploadSvc : "Annotation Upload"
BiosampleSvc --> BiosampleRepo : "Data Access"

GenomeUploadSvc --> MinIOSvc : "File Storage"
AnnotationUploadSvc --> MinIOSvc : "File Storage"
GenomeCtrl --> MinIOSvc : "Direct File Ops"

GenomeRepo --> DBConn : "Database Queries"
BiosampleRepo --> DBConn : "Database Queries"
FileRepo --> DBConn : "File Metadata"

DBConn --> DB : "SQL Operations"

' Model relationships
GenomeModel --> GenomeRepo
BiosampleModel --> BiosampleRepo
FileModel --> FileRepo
AnnotationModel --> FileRepo

' MinIO Service detailed connections
note right of MinIOSvc
  **MinIO Operations:**
  • Upload files (.fa, .fasta, .fna, .gff3, .gff)
  • Download files
  • Delete files
  • Generate presigned URLs
  • File path generation
  • Bucket management
end note

' File flow
note top of GenomeUploadSvc
  **File Upload Flow:**
  1. Validate file type
  2. Generate file path
  3. Upload to MinIO
  4. Store metadata in DB
  5. Create file-genome link
  6. Generate download URL
end note

note top of AnnotationUploadSvc
  **Annotation Upload Flow:**
  1. Validate file type (.gff3, .gff)
  2. Generate file path
  3. Upload to MinIO
  4. Create annotation record
  5. Store file metadata
  6. Create annotation-file link
end note

' API Endpoints
note bottom of FastAPI
  **Key Endpoints:**
  • GET /genomes/ - List genomes
  • GET /genomes/{id} - Get genome details
  • POST /biosamples/{id}/genomes/{id}/upload - Upload genome
  • POST /biosamples/{id}/genomes/{id}/annotations/upload - Upload annotation
  • GET /files/download - Download file
  • DELETE /files/delete - Delete file
end note

@enduml
